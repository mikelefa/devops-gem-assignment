pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins/pod-template.yaml'
      defaultContainer 'docker'
    }
  }

  environment {
    IMAGE_NAME = 'ros_gem_sim'
    CONTAINER_NAME = 'gem_sim_container'
  }

  stages {

    stage('Checkout') {
      steps {
        container('docker') {
          checkout scm
        }
      }
    }

    stage('Start Docker Daemon') {
      steps {
        container('docker') {
          // Start Docker-in-Docker daemon
          sh 'dockerd-entrypoint.sh & sleep 10'
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        container('docker') {
          sh "docker build -t $IMAGE_NAME -f docker/Dockerfile ."
        }
      }
    }

    stage('Run Simulation + Evaluation') {
      steps {
        container('docker') {
          // Run simulation container
          sh """
          docker run -d --rm \
            --name $CONTAINER_NAME \
            --env DISPLAY= \
            --network host \
            $IMAGE_NAME
          """

          // Wait for sim startup
          sleep 30

          // Run evaluation script inside running container
          sh """
          docker exec $CONTAINER_NAME bash -c \
            'source /ros_ws/devel/setup.bash && python3 /ros_ws/src/POLARIS_GEM_e2/polaris_gem_drivers_sim/gem_pure_pursuit_sim/scripts/evaluate_cross_track_error.py'
          """
        }
      }
    }
  }

  post {
    success {
      echo "✅ Test passed!"
      mail to: 'gemcicd@gmail.com',
           subject: '✅ GEM Simulation Success',
           body: 'Simulation test passed. Cross-track error < 1m.'
    }
    failure {
      echo "❌ Test failed!"
      mail to: 'gemcicd@gmail.com',
           subject: '❌ GEM Simulation Failed',
           body: 'Simulation test failed. See Jenkins console output for details.'
    }
    always {
      container('docker') {
        sh "docker rm -f $CONTAINER_NAME || true"
      }
    }
  }
}
